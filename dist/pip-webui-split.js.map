{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/split.ts"],"names":[],"mappings":"AAAA;ACOA,CAAC;IACG,YAAY,CAAC;IAEb,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAEhD,UAAU,CAAC,GAAG,CAAE,UAAS,UAAU,EAAE,QAAQ;QAEzC,UAAU,CAAC,GAAG,CAAC,mBAAmB,EAC9B,UAAS,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU;YAEpD,IAAI,aAAa,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;YAEpC,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC3B,aAAa,CAAC,WAAW,CAAC,wBAAwB,CAAC,CAAC;gBACpD,aAAa,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;gBACjD,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;oBACjC,EAAE,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;wBACjD,aAAa,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;oBACrD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,aAAa,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;oBAClD,CAAC;gBACL,CAAC;YACL,CAAC;QAEL,CAAC,CACJ,CAAC;IAEN,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,QAAQ,CAAC,UAAU,EAAE;QAC5B,IAAI,mBAAmB,GAAG,EAAE,CAAC;QAE7B,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;QAEnD,IAAI,CAAC,IAAI,GAAG;YACR,MAAM,CAAC;gBACH,iBAAiB,EAAE,iBAAiB;aACvC,CAAC;QACN,CAAC,CAAC;QAEF,MAAM,CAAC;QAIP,+BAA+B,QAAQ;YACnC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC/C,MAAM,IAAI,KAAK,CAAC,qDAAqD,CAAC,CAAC;YAC3E,CAAC;YAED,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,CAAC;QAED,2BAA2B,OAAO,EAAE,SAAS;YACzC,IAAI,CAAC,EAAE,OAAO,EAAE,SAAS,CAAC;YAE1B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9C,OAAO,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;oBACtD,SAAS,GAAG,mBAAmB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAE3D,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACf,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC;gBAC/B,CAAC;YACL,CAAC;YAED,MAAM,CAAC,KAAK,CAAA;QAChB,CAAC;IAEL,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,EAAE,CAAC","file":"pip-webui-split.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @file Split layout\n * @copyright Digital Living Software Corp. 2014-2015\n */\n\n/* global $, angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipSplit', []);\n\n    thisModule.run( function($rootScope, pipSplit) {\n        // Intercept routes\n        $rootScope.$on('$stateChangeStart',\n            function(event, toState, toParams, fromState, fromParams) {\n                // Split animation\n                var splitElements = $('.pip-split');\n                \n                if (splitElements.length > 0) {\n                    splitElements.removeClass('pip-transition-forward');\n                    splitElements.removeClass('pip-transition-back');\n                    if (toState.name != fromState.name) {\n                        if (pipSplit.forwardTransition(toState, fromState)) {\n                            splitElements.addClass('pip-transition-forward');\n                        } else {\n                            splitElements.addClass('pip-transition-back');\n                        }\n                    }\n                }\n\n            }\n        );\n\n    });\n\n    thisModule.provider('pipSplit', function(): any {\n        var transitionSequences = [];\n\n        this.addTransitionSequence = addTransitionSequence;\n\n        this.$get = function () {\n            return {\n                forwardTransition: forwardTransition\n            };\n        };\n\n        return;\n\n        //----------------------------\n\n        function addTransitionSequence(sequence) {\n            if (!_.isArray(sequence) || sequence.length == 0) {\n                throw new Error('Transition sequence must be an array of state names');\n            }\n\n            transitionSequences.push(sequence);\n        }\n\n        function forwardTransition(toState, fromState) {\n            var i, toIndex, fromIndex;\n\n            for (i = 0; i < transitionSequences.length; i++) {\n                toIndex = transitionSequences[i].indexOf(toState.name),\n                fromIndex = transitionSequences[i].indexOf(fromState.name);\n\n                if (toIndex > -1) {\n                    return toIndex > fromIndex;\n                }\n            }\n\n            return false\n        }\n\n    });\n\n})();\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc3BsaXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNPQSxDQUFDO0lBQ0csWUFBWSxDQUFDO0lBRWIsSUFBSSxVQUFVLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFaEQsVUFBVSxDQUFDLEdBQUcsQ0FBRSxVQUFTLFVBQVUsRUFBRSxRQUFRO1FBRXpDLFVBQVUsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQzlCLFVBQVMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLFVBQVU7WUFFcEQsSUFBSSxhQUFhLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBRXBDLEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDM0IsYUFBYSxDQUFDLFdBQVcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO2dCQUNwRCxhQUFhLENBQUMsV0FBVyxDQUFDLHFCQUFxQixDQUFDLENBQUM7Z0JBQ2pELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLElBQUksU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQ2pDLEVBQUUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNqRCxhQUFhLENBQUMsUUFBUSxDQUFDLHdCQUF3QixDQUFDLENBQUM7b0JBQ3JELENBQUM7b0JBQUMsSUFBSSxDQUFDLENBQUM7d0JBQ0osYUFBYSxDQUFDLFFBQVEsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO29CQUNsRCxDQUFDO2dCQUNMLENBQUM7WUFDTCxDQUFDO1FBRUwsQ0FBQyxDQUNKLENBQUM7SUFFTixDQUFDLENBQUMsQ0FBQztJQUVILFVBQVUsQ0FBQyxRQUFRLENBQUMsVUFBVSxFQUFFO1FBQzVCLElBQUksbUJBQW1CLEdBQUcsRUFBRSxDQUFDO1FBRTdCLElBQUksQ0FBQyxxQkFBcUIsR0FBRyxxQkFBcUIsQ0FBQztRQUVuRCxJQUFJLENBQUMsSUFBSSxHQUFHO1lBQ1IsTUFBTSxDQUFDO2dCQUNILGlCQUFpQixFQUFFLGlCQUFpQjthQUN2QyxDQUFDO1FBQ04sQ0FBQyxDQUFDO1FBRUYsTUFBTSxDQUFDO1FBSVAsK0JBQStCLFFBQVE7WUFDbkMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDL0MsTUFBTSxJQUFJLEtBQUssQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO1lBQzNFLENBQUM7WUFFRCxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDdkMsQ0FBQztRQUVELDJCQUEyQixPQUFPLEVBQUUsU0FBUztZQUN6QyxJQUFJLENBQUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxDQUFDO1lBRTFCLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO2dCQUM5QyxPQUFPLEdBQUcsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7b0JBQ3RELFNBQVMsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUUzRCxFQUFFLENBQUMsQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNmLE1BQU0sQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFDO2dCQUMvQixDQUFDO1lBQ0wsQ0FBQztZQUVELE1BQU0sQ0FBQyxLQUFLLENBQUE7UUFDaEIsQ0FBQztJQUVMLENBQUMsQ0FBQyxDQUFDO0FBRVAsQ0FBQyxDQUFDLEVBQUUsQ0FBQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCIvKipcbiAqIEBmaWxlIFNwbGl0IGxheW91dFxuICogQGNvcHlyaWdodCBEaWdpdGFsIExpdmluZyBTb2Z0d2FyZSBDb3JwLiAyMDE0LTIwMTVcbiAqL1xuXG4vKiBnbG9iYWwgJCwgYW5ndWxhciAqL1xuXG4oZnVuY3Rpb24gKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIHZhciB0aGlzTW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcFNwbGl0JywgW10pO1xuXG4gICAgdGhpc01vZHVsZS5ydW4oIGZ1bmN0aW9uKCRyb290U2NvcGUsIHBpcFNwbGl0KSB7XG4gICAgICAgIC8vIEludGVyY2VwdCByb3V0ZXNcbiAgICAgICAgJHJvb3RTY29wZS4kb24oJyRzdGF0ZUNoYW5nZVN0YXJ0JyxcbiAgICAgICAgICAgIGZ1bmN0aW9uKGV2ZW50LCB0b1N0YXRlLCB0b1BhcmFtcywgZnJvbVN0YXRlLCBmcm9tUGFyYW1zKSB7XG4gICAgICAgICAgICAgICAgLy8gU3BsaXQgYW5pbWF0aW9uXG4gICAgICAgICAgICAgICAgdmFyIHNwbGl0RWxlbWVudHMgPSAkKCcucGlwLXNwbGl0Jyk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKHNwbGl0RWxlbWVudHMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBzcGxpdEVsZW1lbnRzLnJlbW92ZUNsYXNzKCdwaXAtdHJhbnNpdGlvbi1mb3J3YXJkJyk7XG4gICAgICAgICAgICAgICAgICAgIHNwbGl0RWxlbWVudHMucmVtb3ZlQ2xhc3MoJ3BpcC10cmFuc2l0aW9uLWJhY2snKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRvU3RhdGUubmFtZSAhPSBmcm9tU3RhdGUubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBpcFNwbGl0LmZvcndhcmRUcmFuc2l0aW9uKHRvU3RhdGUsIGZyb21TdGF0ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcGxpdEVsZW1lbnRzLmFkZENsYXNzKCdwaXAtdHJhbnNpdGlvbi1mb3J3YXJkJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNwbGl0RWxlbWVudHMuYWRkQ2xhc3MoJ3BpcC10cmFuc2l0aW9uLWJhY2snKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuXG4gICAgfSk7XG5cbiAgICB0aGlzTW9kdWxlLnByb3ZpZGVyKCdwaXBTcGxpdCcsIGZ1bmN0aW9uKCk6IGFueSB7XG4gICAgICAgIHZhciB0cmFuc2l0aW9uU2VxdWVuY2VzID0gW107XG5cbiAgICAgICAgdGhpcy5hZGRUcmFuc2l0aW9uU2VxdWVuY2UgPSBhZGRUcmFuc2l0aW9uU2VxdWVuY2U7XG5cbiAgICAgICAgdGhpcy4kZ2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBmb3J3YXJkVHJhbnNpdGlvbjogZm9yd2FyZFRyYW5zaXRpb25cbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuO1xuXG4gICAgICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gICAgICAgIGZ1bmN0aW9uIGFkZFRyYW5zaXRpb25TZXF1ZW5jZShzZXF1ZW5jZSkge1xuICAgICAgICAgICAgaWYgKCFfLmlzQXJyYXkoc2VxdWVuY2UpIHx8IHNlcXVlbmNlLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUcmFuc2l0aW9uIHNlcXVlbmNlIG11c3QgYmUgYW4gYXJyYXkgb2Ygc3RhdGUgbmFtZXMnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdHJhbnNpdGlvblNlcXVlbmNlcy5wdXNoKHNlcXVlbmNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGZvcndhcmRUcmFuc2l0aW9uKHRvU3RhdGUsIGZyb21TdGF0ZSkge1xuICAgICAgICAgICAgdmFyIGksIHRvSW5kZXgsIGZyb21JbmRleDtcblxuICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IHRyYW5zaXRpb25TZXF1ZW5jZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0b0luZGV4ID0gdHJhbnNpdGlvblNlcXVlbmNlc1tpXS5pbmRleE9mKHRvU3RhdGUubmFtZSksXG4gICAgICAgICAgICAgICAgZnJvbUluZGV4ID0gdHJhbnNpdGlvblNlcXVlbmNlc1tpXS5pbmRleE9mKGZyb21TdGF0ZS5uYW1lKTtcblxuICAgICAgICAgICAgICAgIGlmICh0b0luZGV4ID4gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRvSW5kZXggPiBmcm9tSW5kZXg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuXG4gICAgfSk7XG5cbn0pKCk7XG4iXX0="}